<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================
        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).
        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/font-awesome.css">
    <link rel="stylesheet" href="/styles/style.css">
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="stylesheet" href="/styles/bootstrap-fileupload.min.css">
    <link rel="stylesheet" href="/styles/bootstrap-imageupload.css">
    <link rel="stylesheet" href="/styles/font-awesome-ie7.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/modal.css">
    <link rel="stylesheet" href="/styles/popuo-box.css">
    <link rel="stylesheet" href="/styles/swipebox.css">
    <link rel="stylesheet" href="/styles/upload.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>
    <!--footer-starts-->
  <div class="footer">
    <div class="container">
      <div class="footer-text">
        <div class="col-md-6 footer-left">
          <ul>
            <li><a href="https://facebook.com/healthione.initiative"><span class="fb"> </span></a></li>
            <li><a href="https://twitter.com/@Healthi_One"><span class="t"> </span></a></li>
            <!-- <li><a href="#"><span class="g"> </span></a></li>
            <li><a href="#"><span class="in"> </span></a></li> -->
          </ul>
        </div>
        <div class="col-md-6 footer-left">
          <p>Developed by <a href="mailto:?Subject=Developer Needed &amp;Body=I%20saw%20this%20from%20HealthiOne%20and%20contacted%20you!%20" > BenNetworks </a>, Design by <a href=" https://w3layouts.com" > W3Layouts </a> </p>
        </div>
        <div class="clearfix"></div>
      </div>
    </div>
    
    <a href="#home" id="toTop" class="scroll" style="display: block;"> <span id="toTopHover" style="opacity: 1;"> </span></a>
  </div>
  <!--footer-end--> 

<script src="/js/jquery.js"></script>
<!-- <script src="/js/bootstrap.js"></script> -->
<script src="/js/jquery-1.11.0.min.js"></script>

    <!--
        Client-side Templates
        ========================
        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.
        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--
      Client-side Javascript
      ========================
      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).
      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript
    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/jquery.js"></script>
    <script src="/js/jquery-1.11.0.min.js"></script>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/bootstrap-fileupload.js"></script>
    <script src="/js/bootstrap-imageupload.js"></script>
    <script src="/js/circles.js"></script>
    <script src="/js/classie.js"></script>
    <script src="/js/easing.js"></script>
    <script src="/js/jquery.magnific-popup.js"></script>
    <script src="/js/jquery.mixitup.min.js"></script>
    <script src="/js/jquery.swipebox.min.js"></script>
    <script src="/js/modernizr.custom.53451.js"></script>
    <script src="/js/move-top.js"></script>
    <script src="/js/responsiveslides.min.js"></script>
    <script src="/js/uisearch.js"></script>
    <script src="/js/upload.js"></script>
    <script src="/js/validator.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>